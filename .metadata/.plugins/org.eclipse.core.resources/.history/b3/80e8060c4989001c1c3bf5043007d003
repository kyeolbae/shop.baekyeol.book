/* 
	-- 프로그램명 : 프레임웍 / DATAHUB 트렌젝션 처리 서비스
	-- 날짜 : 2021.10.21 by hshwang
*/

package com.ec.eframework.ex.datahub;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.ec.eframework.mapper.ex.datahub.KwichubServiceMapper2;
import com.ec.eframework.mapper.ex.kwichub.KwichubServiceMapper3;

@Service
public class KwichubTransactionService { 
	
	@Value("${db_encrypt.key}")
	private String aesEncrypt ; 
	
	@Autowired
	private KwichubServiceMapper2 kwichubServiceMapper2;
	@Autowired
	private KwichubServiceMapper3 kwichubServiceMapper3;
	
	@Transactional
	public int insertKHCardList (Map paramMap) {
		paramMap.put("AES_ENCRYPT", aesEncrypt);
		int cnt = 0;
		List<Map<String, Object>> list = (List<Map<String, Object>>) paramMap.get("LIST");
		for (int i = 0; i < list.size(); i++) {
			list.get(i).putAll(paramMap);
			cnt += kwichubServiceMapper2.insertKHCardList(list.get(i));
		}
		kwichubServiceMapper2.updateKHCardListAesEncrypt(paramMap);
		return cnt;
	}
	
	@Transactional
	public int insertKHCardLimitList (Map paramMap) {
		paramMap.put("AES_ENCRYPT", aesEncrypt);
		int cnt = 0;
		List<Map<String, Object>> list = (List<Map<String, Object>>) paramMap.get("LIST");
		for (int i = 0; i < list.size(); i++) {
			list.get(i).putAll(paramMap);
			cnt += kwichubServiceMapper2.insertKHCardLimitList(list.get(i));
		}
		kwichubServiceMapper2.updateKHCardLimitListAesEncrypt(paramMap);
		return cnt;
	}
	
	@Transactional
	public int insertKHCardAcquireList (Map paramMap) {
		paramMap.put("AES_ENCRYPT", aesEncrypt);
		int cnt = 0;
		List<Map<String, Object>> list = (List<Map<String, Object>>) paramMap.get("LIST");
		for (int i = 0; i < list.size(); i++) {
			list.get(i).putAll(paramMap);
			cnt += kwichubServiceMapper2.insertKHCardAcquireList(list.get(i));
		}
		kwichubServiceMapper2.updateKHCardAcquireListAesEncrypt(paramMap);
		return cnt;
	}
	
	@Transactional
	public int insertKHCardApprList (Map paramMap) {
		paramMap.put("AES_ENCRYPT", aesEncrypt);
		int cnt = 0;
		List<Map<String, Object>> list = (List<Map<String, Object>>) paramMap.get("LIST");
		for (int i = 0; i < list.size(); i++) {
			list.get(i).putAll(paramMap);
			cnt += kwichubServiceMapper2.insertKHCardApprList(list.get(i));
		}
		kwichubServiceMapper2.updateKHCardApprListAesEncrypt(paramMap);
		return cnt;
	}
	
	@Transactional
	public int insertKHCardBillList (Map paramMap) {
		paramMap.put("AES_ENCRYPT", aesEncrypt);
		int cnt = 0;
		List<Map<String, Object>> list = (List<Map<String, Object>>) paramMap.get("LIST");
		for (int i = 0; i < list.size(); i++) {
			list.get(i).putAll(paramMap);
			cnt += kwichubServiceMapper2.insertKHCardBillList(list.get(i));
		}
		kwichubServiceMapper2.updateKHCardBillListAesEncrypt(paramMap);
		return cnt;
	}
	
	@Transactional
	public int insertKHTaxList (Map paramMap) {
		int cnt = 0;
		List<Map<String, Object>> list = (List<Map<String, Object>>) paramMap.get("LIST");
		for (int i = 0; i < list.size(); i++) {
			list.get(i).putAll(paramMap);
			cnt += kwichubServiceMapper2.insertKHTaxList(list.get(i));
			List<Map<String, Object>> itemlist = (List<Map<String, Object>>) list.get(i).get("ITEM_LIST");
			for (int j = 0; j < itemlist.size(); j++) {
				itemlist.get(j).put("HIST_ROW_KEY", list.get(i).get("HIST_ROW_KEY"));
				itemlist.get(j).putAll(paramMap);
				kwichubServiceMapper2.insertKHTaxItemList(itemlist.get(j));
			}
		}
		return cnt;
	}
	
	@Transactional
	public int insertKHCashList (Map paramMap) {
		int cnt = 0;
		List<Map<String, Object>> list = (List<Map<String, Object>>) paramMap.get("LIST");
		for (int i = 0; i < list.size(); i++) {
			list.get(i).putAll(paramMap);
			cnt += kwichubServiceMapper2.insertKHCashList(list.get(i));
		}
		return cnt;
	}
	
	@Transactional
	public int insertCorpState (Map paramMap) {
		int cnt = kwichubServiceMapper3.insertCorpState(paramMap);
		return cnt;
	}
	
	@Transactional
	public int insertBulkCorpState (Map paramMap) {
		int cnt = 0;
		List<Map<String, Object>> list = (List<Map<String, Object>>) paramMap.get("LIST");
		cnt += kwichubServiceMapper3.insertBulkCorpStateRequest(paramMap);
	    for (int i = 0; i < list.size(); i++) {
		   list.get(i).putAll(paramMap);
		   cnt += kwichubServiceMapper3.insertBulkCorpStateResult(paramMap);
	    }
		return cnt;
	}
	
	@Transactional
	public int updateBulkCorpState (Map paramMap) {
		int cnt = 0;
		List<Map<String, Object>> list = (List<Map<String, Object>>) paramMap.get("LIST");
	    for (int i = 0; i < list.size(); i++) {
			list.get(i).putAll(paramMap);
			cnt += kwichubServiceMapper3.updateBulkCorpStateResult(list.get(i));
	    }
	    paramMap.put("SUCC_CNT", cnt);
	    kwichubServiceMapper3.updateBulkCorpState(paramMap); //kh_bizstatus_bulk 신청결과 여부 업데이트
		return cnt;
	}
	
}
