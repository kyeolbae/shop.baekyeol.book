package com.ec.eframework.ex.report;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ec.eframework.lib.JsonDataMap;
import com.ec.eframework.lib.JsonResultMsgMap;
import com.ec.eframework.lib.KafkaProducer;
import com.ec.eframework.lib.P;
import com.ec.eframework.lib.MapSession;
import com.ec.eframework.mapper.ex.expense.ApproveServiceMapper;
import com.ec.eframework.mapper.ex.report.ReortIfApiServiceMapper;
import com.ec.eframework.notification.NotificationService;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.ec.eframework.ex.bgt.BgtToSapService;
import com.ec.eframework.ex.report.KafkaApproveService;

// 상신 , 결재, 반려, 회수 시 타시스템(sap등) 연동
//EXPENSE_REPORT_TYPE_IF action_cd = '10' 상신
//EXPENSE_REPORT_TYPE_IF action_cd = '20' 최종결재
//EXPENSE_REPORT_TYPE_IF action_cd = '30' 반려
//EXPENSE_REPORT_TYPE_IF action_cd = '40' 회수


@Service
public class ApproveApiService {
	
	@Autowired
	ReortIfApiServiceMapper reortIfApiServiceMapper;
	@Autowired
	BgtToSapService bgtToSapService;
	
	public Map<String, Object>  callReportIfApi(@RequestBody Map paramMap, HttpSession session) {


		 List<HashMap<String , String >> list = reortIfApiServiceMapper.getReportIfApi(paramMap);
		 if (list.size() == 0) { 
			 return new JsonResultMsgMap(true); // 처리할 것 없어서 true 리턴
		 }
		 Map result = new HashMap();
	     for (Map map : list) {
	     	 map.putAll(paramMap);
	    	 String ifId = map.get("IF_ID").toString();
	    	 
				if (ifId.equals("BDGT_REQ")) {
					result = bgtToSapService.bdgtReqToSap(map); // 필요한 파라미터?
				}else if (ifId.equals("BDGT_TRS")) {
					result = bgtToSapService.bdgtTrsToSap(map); // 필요한 파라미터?
				}else if (ifId.equals("BDGT_FWD")) {
					result = bgtToSapService.bdgtFwdToSap(map); // 필요한 파라미터?
				}else if (ifId.equals("BDGT_APPRV")) {
					result = bgtToSapService.bdgtApprvToSap(map); // 필요한 파라미터?
				}
				
				// po result
				P.ln("po result");
				P.ln(result.toString());
				
				//마지막 리턴 값만 리턴
				if (result.get("RESULT").toString().equals("OK")) {
					//return new JsonResultMsgMap(true, result);
				} else {
					return new JsonResultMsgMap(false, result.get("MSG").toString());
				}
	    	 
	     }
		 
	     return new JsonResultMsgMap(true, result);
		 
	} // callReportIfApi
	
    
}
