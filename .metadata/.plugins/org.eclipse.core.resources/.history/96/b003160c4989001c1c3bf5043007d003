package com.ec.eframework.ex.report;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Base64;
import java.util.UUID;

import org.apache.commons.io.FileUtils;

/*
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.springframework.boot.configurationprocessor.json.JSONArray;
import org.springframework.boot.configurationprocessor.json.JSONObject;
import org.springframework.stereotype.Service;

//import io.grpc.StatusRuntimeException;

/**
 * Code sample demonstrating Cloud Vision usage within the context of Spring
 * Framework using Spring Cloud GCP libraries. The sample is written as a Spring
 * Boot application to demonstrate a practical application of this usage.
 */
@Service
public class NaverOcrService_test {

	public static void main(String[] args) {
		// [START spring_vision_text_extraction]

		String dirName = "C:\\Hansung\\NCP_OCR\\테스트영수증\\";
		File dir = new File(dirName);
		String files[] = dir.list();
		
		for (int i = 0; i < files.length; i++) {
			
			File file = new File(dirName + files[i]);
			
			String apiURL = "https://6c6751c4ab944cd3b1ba4de7ee045a61.apigw.ntruss.com/custom/v1/5703/c66c986e8e781b8698bb3add86af16c1a5a037fe8cbfaacbfcb86d1c1cbc1d85/general";
			String secretKey = "Sm9iT3pmeWJMcHdaeEVZSlpBTHJHekxJZXRLZkdmeUY=";
	
			try {
				byte[] fileContent = FileUtils.readFileToByteArray(new File(dirName + files[i]));
				String encodedString = Base64.getEncoder().encodeToString(fileContent);
				
				URL url = new URL(apiURL);
				HttpURLConnection con = (HttpURLConnection) url.openConnection();
				con.setUseCaches(false);
				con.setDoInput(true);
				con.setDoOutput(true);
				con.setRequestMethod("POST");
				con.setRequestProperty("Content-Type", "application/json; charset=utf-8");
				con.setRequestProperty("X-OCR-SECRET", secretKey);
	
				JSONObject json = new JSONObject();
				json.put("version", "V2"); // 기호문자 따움표 등 인식하기 위해서 V2 사용
				json.put("requestId", UUID.randomUUID().toString());
				json.put("timestamp", System.currentTimeMillis());
				JSONObject image = new JSONObject();
				image.put("format", "png");
	//				image.put("url", "http://img-cdn.ddanzi.com/files/attach/images/4258226/562/742/641/3381cf251fa2045ec04a67f914b262ba.png"); // image should be public, otherwise, should use data
	
	
					image.put("data", encodedString);
					image.put("name", "demo");
					JSONArray images = new JSONArray();
					images.put(image);
					json.put("images", images);
					String postParams = json.toString();
	
					DataOutputStream wr = new DataOutputStream(con.getOutputStream());
					wr.writeBytes(postParams);
					wr.flush();
					wr.close();
	
					int responseCode = con.getResponseCode();
					BufferedReader br;
					if (responseCode == 200) {
						br = new BufferedReader(new InputStreamReader(con.getInputStream()));
					} else {
						br = new BufferedReader(new InputStreamReader(con.getErrorStream()));
					}
					String output;
					output = br.readLine();
					JSONObject jObject = new JSONObject(output);
					JSONArray jArray = jObject.getJSONArray("images");
	
					jObject = jArray.getJSONObject(0);
					jArray = jObject.getJSONArray("fields");
					
					StringBuffer response = new StringBuffer();
					for (int j = 0; j < jArray.length(); j++) {
						jObject = jArray.getJSONObject(j);
						response.append(jObject.getString("inferText") + " "); //좌표값 없이 데이터만 뽑아옴
					}
					System.out.println("파일 이름: " + file.getName());
					System.out.println("NaverOcrService 출력: " + response);
					
//					try {
//						GcpAutoMlService.predict(response.toString(), "");
//					} catch (IOException e) {
//						e.printStackTrace();
//					}
					
					System.out.println();
					
//					OCR 텍스트 PDF로 저장
//					PDFCreate pdfCreate = new PDFCreate();
//					pdfCreate.ReceiptToPDF(response.toString(), file);
//					System.out.println();
				} catch (Exception e) {
					System.out.println(e);
				}
			}

		// [END spring_vision_text_extraction]
	}
}